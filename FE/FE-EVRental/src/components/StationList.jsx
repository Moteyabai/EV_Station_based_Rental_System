import React from "react";
import { Link } from "react-router-dom";
import { useReviews } from "../contexts/ReviewContext";
import "../styles/StationList.css";

export default function StationList({ stations }) {
  const { getStationReviews, getAverageRating } = useReviews();

  if (!stations || stations.length === 0)
    return <p>Kh√¥ng t√¨m th·∫•y tr·∫°m n√†o.</p>;

  // T√≠nh ƒëi·ªÉm ƒë√°nh gi√° trung b√¨nh cho tr·∫°m
  const getStationRating = (stationId) => {
    const reviews = getStationReviews(stationId);
    if (reviews.length === 0) return null;
    return getAverageRating(stationId);
  };

  // Render stars
  const renderStars = (rating) => {
    const stars = [];
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 >= 0.5;

    for (let i = 0; i < 5; i++) {
      if (i < fullStars) {
        stars.push(
          <span key={i} className="star filled">
            ‚òÖ
          </span>
        );
      } else if (i === fullStars && hasHalfStar) {
        stars.push(
          <span key={i} className="star half">
            ‚òÖ
          </span>
        );
      } else {
        stars.push(
          <span key={i} className="star empty">
            ‚òÜ
          </span>
        );
      }
    }
    return stars;
  };

  return (
    <div className="station-list">
      {stations.map((station) => {
        const rating = getStationRating(station.id);
        const reviews = getStationReviews(station.id);

        return (
          <article key={station.id} className="station">
            <div className="station-image">
              {station.images?.thumbnail || station.image ? (
                <img
                  src={station.images?.thumbnail || station.image}
                  alt={station.name}
                  onError={(e) => {
                    e.target.style.display = "none";
                  }}
                />
              ) : (
                <div className="no-image">üì∑ Kh√¥ng c√≥ h√¨nh ·∫£nh</div>
              )}
            </div>
            <div className="station-content">
              <h3>{station.name}</h3>

              {/* Ph·∫ßn ƒë√°nh gi√° */}
              {rating ? (
                <div className="station-rating">
                  <div className="stars">{renderStars(rating)}</div>
                  <span className="rating-text">
                    {rating.toFixed(1)} ‚≠ê ({reviews.length} ƒë√°nh gi√°)
                  </span>
                </div>
              ) : (
                <div className="station-rating">
                  <span className="no-rating">Ch∆∞a c√≥ ƒë√°nh gi√°</span>
                </div>
              )}

              <p className="meta">
                üèçÔ∏è {station.availableVehicles || 0} xe ‚Ä¢ üîå{" "}
                {station.chargingStations || 0} tr·∫°m s·∫°c
              </p>
              <p className="location">
                üìç {station.address || "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ"}
              </p>
              <p className="hours">
                ÔøΩ {station.openingHours || "Ch∆∞a c√≥ th√¥ng tin"}
              </p>
              <p className="desc">{station.description || "Ch∆∞a c√≥ m√¥ t·∫£"}</p>
              <div className="station-actions">
                <Link to={`/stations/${station.id}`} className="btn">
                  Xem chi ti·∫øt
                </Link>
                <Link to={`/stations/${station.id}`} className="btn primary">
                  ƒê·∫∑t ngay
                </Link>
              </div>
            </div>
          </article>
        );
      })}
    </div>
  );
}
